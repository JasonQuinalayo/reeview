{"version":3,"sources":["pages/Questions.js","state/state.js","state/reducer.js","utils.js","services/questions.js","services/user.js","services/auth.js","services/register.js","components/NavBar.js","images/image1.jpeg","pages/Home.js","pages/Profile.js","components/QuestionItem.js","components/ExamQuestionsOptions/SliderComponent.js","components/ExamQuestionsOptions/ExamQuestionsOptions.js","components/ExamQuestionItem.js","pages/PracticeExam/ExamProper.js","pages/PracticeExam/PracticeExam.js","pages/GroupExam/Results.js","pages/GroupExam/GroupExamLobby.js","pages/GroupExam/GroupExam.js","pages/Login.js","pages/Register.js","pages/Admin.js","images/jmon.jpg","App.js","index.js"],"names":["initialState","user","questions","approved","ee","esas","math","pending","StateContext","createContext","StateProvider","reducer","children","useReducer","state","dispatch","Provider","value","useStateValue","useContext","setUser","type","payload","setQuestions","addQuestion","question","approveQuestion","config","backendUrl","objectValuesToArray","Object","keys","map","q","approvedQuestionsAsArray","concat","fetchQuestions","questionsService","a","getQuestions","approvedCategorizedQuestions","pendingQuestions","forEach","category","id","push","isAlphaNumeric","str","test","isAscii","i","length","charCodeAt","url","axios","get","data","addNewQuestion","body","post","suggestUpdateQuestion","approvePendingQuestion","getCurrentUser","getAdmins","admins","getAllUsers","users","promote","login","username","password","logout","register","name","link","createLink","NavBar","Menu","fixed","inverted","color","pointing","secondary","Container","Item","to","isAdmin","position","Button","onClick","authService","status","alert","Home","useState","setAdmins","useEffect","f","userService","newAdmins","Segment","Header","List","items","admin","Image","src","photo","size","centered","Profile","Grid","columns","Column","width","QuestionCard","className","choices","choice","toUpperCase","Label","answer","year","tags","tag","ApprovedQuestionCard","onSuggestUpdate","floated","suggestedUpdates","Divider","v","PendingQuestionCard","onApprove","updateTo","FilterCheckBoxes","updateFunction","t","Checkbox","label","defaultChecked","QuestionsTab","filteredQuestions","setFilteredQuestions","numOfDisplayed","setNumOfDisplayed","pageYOffset","setPageYOffset","searchString","setSearchString","allYears","setAllYears","allTags","setAllTags","filterYears","setFilterYears","filterTags","setFilterTags","filterCategories","setFilterCategories","years","Set","add","Array","from","sort","onScroll","window","scrollY","addEventListener","removeEventListener","innerHeight","document","scrollHeight","prev","Input","fluid","placeholder","onChange","e","target","_","checked","p","filter","newFilteredQuestions","validStrings","includes","b","c","d","validYears","validTags","reduce","acc","cur","validCategory","slice","Date","getFullYear","toString","NewQuestionModal","openModal","onClose","sourceQuestion","onSubmit","setTags","inputTag","setInputTag","formik","useFormik","enableReinitialize","initialValues","choiceA","choiceB","choiceC","choiceD","validate","values","errors","fValue","parseInt","sourceQuestionId","Modal","open","closeIcon","Content","Form","handleSubmit","Field","control","TextArea","getFieldProps","error","touched","content","Group","widths","y","text","action","Questions","openNewQuestionModal","setOpenNewQuestionModal","modalSourceQuestion","setModalSourceQuestion","useParams","approvedQuestions","approvedQuestionsArray","useMemo","panes","questionId","response","menuItem","render","find","x","onCloseModal","onSubmitModal","newQuestion","Tab","SliderComponent","max","setNumOfQuestions","categoryNumOfQuestions","settings","start","min","step","prevState","ExamQuestionsOptions","numOfQuestions","ExamQuestionItem","answerState","handleChange","Radio","Results","examItems","score","correct","item","Icon","ExamProper","finish","submitted","setSubmitted","shuffle","sampleSize","setExamItems","currentPageNumber","setCurrentPageNumber","currentPageItems","setCurrentPageItems","updateExam","prevItems","verticalAlign","Math","floor","PracticeExam","started","setStarted","hidden","ResultItem","singleObjectQuestions","result","examQuestions","showItems","setShowItems","Transition","visible","answers","index","Popup","trigger","results","CurrentParticipants","socket","participants","setParticipants","emit","on","newParticipants","off","participant","ChatBox","messages","setMessages","typedMessage","setTypedMessage","messageBoxRef","useRef","message","prevMessages","newMessages","unshift","uuidv4","current","scrollTop","handleSend","preventDefault","ref","rows","onKeyDown","keyCode","shiftKey","stretched","sender","GroupExamLobby","create","currentQuestionId","setCurrentQuestionId","currentAnswer","setCurrentAnswer","currentNumber","setCurrentNumber","calculatingResults","setCalculatingResults","setExamQuestions","setResults","number","examResults","examQuestions_","Loader","active","CreateLobbyModal","modalOpen","timeInterval","setTimeInterval","onBlur","val","Lobbies","lobbies","setLobbies","newLobbies","lobby","host","GroupExam","setSocket","setCreate","lobbyId","setLobbyId","leave","setLeave","newSocket","io","close","Confirm","onCancel","onConfirm","Login","setError","Message","Register","confirmPassword","registerService","Admin","registrationLink","setRegistrationLink","setUsers","newUsers","createRegistrationLink","newRegistrationLink","updatedUser","labelPosition","icon","navigator","clipboard","writeText","AppWithLoggedInUser","exact","path","App","loading","setLoading","currentUser","textAlign","jmon","ReactDOM","key","res","assign","getElementById"],"mappings":"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","file":"static/js/main.c8d078ac.chunk.js","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport {\n  Button, Checkbox, Container, Divider, Form, Input, Label, Modal, Segment, Tab,\n} from 'semantic-ui-react';\nimport { useParams } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { useStateValue, addQuestion, approveQuestion } from '../state';\nimport { approvedQuestionsAsArray } from '../utils';\nimport { PendingQuestionCard, ApprovedQuestionCard } from '../components/QuestionItem';\nimport { questionsService } from '../services';\n\nconst FilterCheckBoxes = ({ items, updateFunction }) => (\n  <Segment>\n    {items.map((t) => (\n      <Checkbox\n        key={t}\n        label={t}\n        defaultChecked\n        onClick={updateFunction}\n      />\n    ))}\n  </Segment>\n);\n\nconst QuestionsTab = ({ questions, onSuggestUpdate, onApprove }) => {\n  const [filteredQuestions, setFilteredQuestions] = useState([]);\n  const [numOfDisplayed, setNumOfDisplayed] = useState(10);\n  const [pageYOffset, setPageYOffset] = useState();\n  const [searchString, setSearchString] = useState('');\n  const [allYears, setAllYears] = useState([]);\n  const [allTags, setAllTags] = useState([]);\n  const [filterYears, setFilterYears] = useState();\n  const [filterTags, setFilterTags] = useState();\n  const [filterCategories, setFilterCategories] = useState();\n  useEffect(() => {\n    const years = new Set();\n    const tags = new Set();\n    questions.forEach((q) => {\n      if (q.year) years.add(q.year);\n      q.tags.forEach((t) => {\n        tags.add(t);\n      });\n    });\n    setFilteredQuestions([...questions]);\n    setAllYears(Array.from(years).sort());\n    setAllTags(Array.from(tags).sort());\n    setFilterYears(Array.from(years));\n    setFilterTags(Array.from(tags));\n    setFilterCategories(['ee', 'esas', 'math']);\n  }, [questions]);\n  useEffect(() => {\n    const onScroll = () => {\n      setPageYOffset(window.scrollY);\n    };\n    window.addEventListener('scroll', onScroll);\n    return () => window.removeEventListener('scroll', onScroll);\n  }, []);\n  useEffect(() => {\n    if (pageYOffset + window.innerHeight + 2 >= document.body.scrollHeight) {\n      setNumOfDisplayed((prev) => (prev < questions.length ? prev + 10 : prev));\n    }\n  }, [pageYOffset, questions.length, numOfDisplayed]);\n  const filter = () => {\n    const newFilteredQuestions = questions.filter((q) => {\n      let validStrings = true;\n      if (searchString) {\n        validStrings = (q.question.includes(searchString)\n          || q.choices.a.includes(searchString)\n          || q.choices.b.includes(searchString)\n          || q.choices.c.includes(searchString)\n          || q.choices.d.includes(searchString));\n      }\n      const validYears = filterYears.includes(q.year);\n      const validTags = filterTags.length === 0\n      || q.tags.reduce((acc, cur) => acc && filterTags.includes(cur), true);\n      const validCategory = filterCategories.includes(q.category);\n      return validStrings && validYears && validTags && validCategory;\n    });\n    setFilteredQuestions(newFilteredQuestions);\n  };\n  return (\n    <Container className=\"padded-top\">\n      <Segment>\n        <Input\n          fluid\n          placeholder=\"Search for a substring within questions...\"\n          onChange={(e) => setSearchString(e.target.value)}\n        />\n        <FilterCheckBoxes\n          items={['ee', 'esas', 'math']}\n          updateFunction={(_, { label, checked }) => (\n            setFilterCategories((p) => (checked ? p.concat(label) : p.filter((e) => e !== label)))\n          )}\n        />\n        {allYears.length > 0\n          && (\n          <FilterCheckBoxes\n            items={allYears}\n            updateFunction={(_, { label, checked }) => (\n              setFilterYears((p) => (checked ? p.concat(label) : p.filter((e) => e !== label))))}\n          />\n          )}\n        {allTags.length > 0\n          && (\n          <FilterCheckBoxes\n            items={allTags}\n            updateFunction={(_, { label, checked }) => (\n              setFilterTags((p) => (checked ? p.concat(label) : p.filter((e) => e !== label)))\n            )}\n          />\n          )}\n        <Button fluid onClick={filter}>Filter</Button>\n      </Segment>\n      {filteredQuestions.slice(0, numOfDisplayed)\n        .map((question) => (\n          <Segment key={question.id}>\n            {onSuggestUpdate\n              ? (\n                <ApprovedQuestionCard\n                  onSuggestUpdate={() => onSuggestUpdate(question)}\n                  question={question}\n                />\n              )\n              : (\n                <PendingQuestionCard\n                  onApprove={() => onApprove(question.id)}\n                  question={question}\n                />\n              )}\n          </Segment>\n        ))}\n    </Container>\n  );\n};\n\nconst validYears = ['unknown'];\nfor (let i = 1970; i <= (new Date().getFullYear()); i++) {\n  validYears.push(i.toString());\n}\n\nconst NewQuestionModal = ({\n  openModal, onClose, sourceQuestion, onSubmit,\n}) => {\n  const [tags, setTags] = useState(\n    sourceQuestion && sourceQuestion.tags.length > 0 ? sourceQuestion.tags : [],\n  );\n  const [inputTag, setInputTag] = useState('');\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: sourceQuestion\n      ? {\n        question: sourceQuestion.question,\n        choiceA: sourceQuestion.choices.a,\n        choiceB: sourceQuestion.choices.b,\n        choiceC: sourceQuestion.choices.c,\n        choiceD: sourceQuestion.choices.d,\n        answer: sourceQuestion.answer,\n        year: sourceQuestion.year,\n        category: sourceQuestion.category,\n      }\n      : {\n        question: '',\n        choiceA: '',\n        choiceB: '',\n        choiceC: '',\n        choiceD: '',\n        answer: 'a',\n        year: 'unknown',\n        category: 'ee',\n      },\n    validate: (values) => {\n      const errors = {};\n      if (!values.question) {\n        errors.question = 'Required';\n      } else if (values.question.length > 500) {\n        errors.question = 'Too long!';\n      }\n\n      ['a', 'b', 'c', 'd'].forEach((c) => {\n        const fValue = `choice${c.toUpperCase()}`;\n        if (!values[fValue]) {\n          errors[fValue] = 'Required';\n        } else if (values[fValue].length > 200) {\n          errors[fValue] = 'Too long!';\n        }\n      });\n\n      return errors;\n    },\n    onSubmit: async (values) => {\n      const q = {\n        question: values.question,\n        choices: {\n          a: values.choiceA,\n          b: values.choiceB,\n          c: values.choiceC,\n          d: values.choiceD,\n        },\n        answer: values.answer,\n        category: values.category,\n        tags,\n      };\n      if (values.year !== 'unknown') q.year = parseInt(values.year, 10);\n      if (sourceQuestion) q.sourceQuestionId = sourceQuestion.id;\n      onSubmit(q);\n    },\n  });\n  return (\n    <Modal open={openModal} closeIcon onClose={onClose}>\n      <Modal.Header>New Question/Update Question</Modal.Header>\n      <Modal.Content>\n        <Form onSubmit={formik.handleSubmit}>\n          <Form.Field\n            label=\"Question\"\n            control={Form.TextArea}\n            {...formik.getFieldProps('question')}\n            error={formik.touched.question && formik.errors.question && {\n              content: formik.errors.question,\n            }}\n          />\n          <div>Choices</div>\n          {['a', 'b', 'c', 'd'].map((c) => (\n            <Form.Field\n              key={c}\n              label={c}\n              control={Form.Input}\n              {...formik.getFieldProps(`choice${c.toUpperCase()}`)}\n              error={formik.touched[`choice${c.toUpperCase()}`] && formik.errors[`choice${c.toUpperCase()}`] && {\n                content: formik.errors[`choice${c.toUpperCase()}`],\n              }}\n            />\n          ))}\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              label=\"Category\"\n              control=\"select\"\n              {...formik.getFieldProps('category')}\n            >\n              {['ee', 'esas', 'math'].map((y) => (\n                <option\n                  key={y}\n                  text={y}\n                  value={y}\n                  label={y}\n                />\n              ))}\n            </Form.Field>\n            <Form.Field\n              label=\"Answer\"\n              control=\"select\"\n              {...formik.getFieldProps('answer')}\n            >\n              {['a', 'b', 'c', 'd'].map((y) => (\n                <option\n                  key={y}\n                  text={y}\n                  value={y}\n                  label={y}\n                />\n              ))}\n            </Form.Field>\n            <Form.Field\n              label=\"Year\"\n              control=\"select\"\n              {...formik.getFieldProps('year')}\n            >\n              {validYears.map((y) => (\n                <option\n                  key={y}\n                  text={y}\n                  value={y}\n                  label={y}\n                />\n              ))}\n            </Form.Field>\n          </Form.Group>\n          <Input\n            action={{\n              content: 'Add Tag',\n              onClick: () => setTags((p) => p.concat(inputTag)),\n              type: 'button',\n            }}\n            value={inputTag}\n            onChange={(e) => setInputTag(e.target.value)}\n          />\n          {tags.length > 0\n            && (\n            <Segment>\n              {tags.map((t) => (\n                <Label key={t}>{t}</Label>\n              ))}\n            </Segment>\n            )}\n          <Divider />\n          <Form.Button type=\"submit\" fluid>Submit</Form.Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst Questions = () => {\n  const [{ questions }, dispatch] = useStateValue();\n  const [openNewQuestionModal, setOpenNewQuestionModal] = useState(false);\n  const [modalSourceQuestion, setModalSourceQuestion] = useState(null);\n  const { id } = useParams();\n  const { approved: approvedQuestions, pending: pendingQuestions } = questions;\n  const approvedQuestionsArray = useMemo(() => (\n    approvedQuestionsAsArray(approvedQuestions)), [approvedQuestions]);\n\n  const onSuggestUpdate = (sourceQuestion) => {\n    setModalSourceQuestion(sourceQuestion);\n    setOpenNewQuestionModal((p) => !p);\n  };\n\n  const panes = useMemo(() => {\n    const onApprove = async (questionId) => {\n      try {\n        const q = await questionsService.approvePendingQuestion(questionId);\n        dispatch(approveQuestion(q));\n      } catch (e) {\n        alert(e.response.data.error);\n      }\n    };\n    return ([\n      { menuItem: 'Approved', render: () => <QuestionsTab onSuggestUpdate={onSuggestUpdate} questions={approvedQuestionsArray} /> },\n      { menuItem: 'Pending', render: () => <QuestionsTab onApprove={onApprove} questions={pendingQuestions} /> },\n    ]);\n  }, [dispatch, pendingQuestions, approvedQuestionsArray]);\n  if (id) {\n    let question = approvedQuestionsArray.find((x) => x.id === id);\n    if (question) {\n      return <ApprovedQuestionCard question={question} onSuggestUpdate={onSuggestUpdate} />;\n    }\n    question = pendingQuestions.find((x) => x.id === id);\n    if (question) {\n      return <PendingQuestionCard question={question} />;\n    }\n    return <div>Question not found</div>;\n  }\n\n  const onCloseModal = () => {\n    setOpenNewQuestionModal(((p) => !p));\n    setModalSourceQuestion(null);\n  };\n\n  const onSubmitModal = async (newQuestion) => {\n    try {\n      if (newQuestion.sourceQuestionId) {\n        await questionsService.suggestUpdateQuestion(newQuestion, newQuestion.sourceQuestionId);\n      } else {\n        await questionsService.addNewQuestion(newQuestion);\n      }\n      dispatch(addQuestion(newQuestion));\n    } catch (e) {\n      alert(e.response.data.error);\n    }\n    onCloseModal();\n  };\n\n  return (\n    <Container>\n      <Button floated=\"right\" type=\"button\" onClick={() => setOpenNewQuestionModal((p) => !p)}>Add Question</Button>\n      <NewQuestionModal\n        openModal={openNewQuestionModal}\n        onClose={onCloseModal}\n        onSubmit={onSubmitModal}\n        sourceQuestion={modalSourceQuestion}\n      />\n      <Tab panes={panes} />\n    </Container>\n  );\n};\n\nexport default Questions;\n","import React, { createContext, useContext, useReducer } from 'react';\n\nconst initialState = {\n  user: null,\n  questions: {\n    approved: {\n      ee: {},\n      esas: {},\n      math: {},\n    },\n    pending: [],\n  },\n};\n\nconst StateContext = createContext([\n  initialState,\n  () => initialState,\n]);\n\nexport const StateProvider = ({\n  reducer,\n  children,\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <StateContext.Provider value={[state, dispatch]}>\n      {children}\n    </StateContext.Provider>\n  );\n};\n\nexport const useStateValue = () => useContext(StateContext);\n","export const reducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return { ...state, user: action.payload.user };\n    case 'SET_QUESTIONS':\n      return { ...state, questions: action.payload.questions };\n    case 'ADD_QUESTION':\n      return {\n        ...state,\n        questions: {\n          ...state.questions,\n          pending: [...state.questions.pending, action.payload.question],\n        },\n      };\n    case 'APPROVE_QUESTION':\n      return {\n        ...state,\n        questions: {\n          approved: {\n            ...state.questions.approved,\n            [action.payload.question.category]: Object.keys(\n              state.questions.approved[action.payload.question.category],\n            )\n              .filter((key) => key !== action.payload.question.updateTo)\n              .reduce((res, key) => (\n                Object.assign(res,\n                  { [key]: state.questions.approved[action.payload.question.category][key] })),\n              {}),\n          },\n          pending: state.questions.pending.filter((q) => q.id !== action.payload.question.id),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setUser = (user) => (\n  {\n    type: 'SET_USER',\n    payload: { user },\n  }\n);\n\nexport const setQuestions = (questions) => (\n  {\n    type: 'SET_QUESTIONS',\n    payload: { questions },\n  }\n);\n\nexport const addQuestion = (question) => (\n  {\n    type: 'ADD_QUESTION',\n    payload: { question },\n  }\n);\n\nexport const approveQuestion = (question) => (\n  {\n    type: 'APPROVE_QUESTION',\n    payload: { question },\n  }\n);\n","import { setQuestions } from './state';\n\nexport const config = {\n  backendUrl: process.env.NODE_ENV === 'production'\n    ? 'https://sleepy-atoll-34773.herokuapp.com'\n    : 'http://localhost:3000',\n};\n\nexport const objectValuesToArray = (questions) => Object.keys(questions).map((q) => questions[q]);\n\nexport const approvedQuestionsAsArray = (questions) => (\n  objectValuesToArray(questions.ee)\n    .concat(objectValuesToArray(questions.esas)).concat(objectValuesToArray(questions.math))\n);\n\nexport const fetchQuestions = async (dispatch, questionsService) => {\n  const questions = await questionsService.getQuestions();\n  const approvedCategorizedQuestions = { ee: {}, esas: {}, math: {} };\n  const pendingQuestions = [];\n  questions.forEach((question) => {\n    if (question.approved) {\n      approvedCategorizedQuestions[question.category][question.id] = question;\n    } else {\n      pendingQuestions.push(question);\n    }\n  });\n  dispatch(setQuestions({ approved: approvedCategorizedQuestions, pending: pendingQuestions }));\n};\n\nexport const isAlphaNumeric = (str) => /^[A-Za-z0-9]+$/.test(str);\n\nexport const isAlphaNumericWithSpace = (str) => /^[A-Za-z0-9 ]+$/.test(str);\n\nexport const isAscii = (str) => {\n  for (let i = 0; i < str.length; i++) if (str.charCodeAt(i) > 127) return false;\n  return true;\n};\n","import axios from 'axios';\nimport { config } from '../utils';\n\nconst url = `${config.backendUrl}/api/questions`;\n\nconst getQuestions = async () => {\n  const user = await axios.get(url);\n  return user.data;\n};\n\nconst addNewQuestion = async (body) => {\n  const question = await axios.post(url, body);\n  return question.data;\n};\n\nconst suggestUpdateQuestion = async (body, id) => {\n  const question = await axios.post(`${url}/suggest-update/${id}`, body);\n  return question.data;\n};\n\nconst approvePendingQuestion = async (id) => {\n  const question = await axios.post(`${url}/approve/${id}`);\n  return question.data;\n};\n\nexport default {\n  getQuestions, addNewQuestion, approvePendingQuestion, suggestUpdateQuestion,\n};\n","import axios from 'axios';\nimport { config } from '../utils';\n\nconst url = `${config.backendUrl}/api/user`;\n\nconst getCurrentUser = async () => {\n  const user = await axios.get(url);\n  return user.data;\n};\n\nconst getAdmins = async () => {\n  const admins = await axios.get(`${url}/admins`);\n  return admins.data;\n};\n\nconst getAllUsers = async () => {\n  const users = await axios.get(`${url}/all`);\n  return users.data;\n};\n\nconst promote = async (id) => {\n  const user = await axios.post(`${url}/promote/${id}`);\n  return user.data;\n};\n\nexport default {\n  getCurrentUser, getAdmins, getAllUsers, promote,\n};\n","import axios from 'axios';\nimport { config } from '../utils';\n\nconst url = `${config.backendUrl}/api/auth`;\n\nconst login = async (username, password) => {\n  const user = await axios.post(`${url}/login`, { username, password });\n  return user.data;\n};\n\nconst logout = async () => axios.post(`${url}/logout`);\n\nexport default { login, logout };\n","import axios from 'axios';\nimport { config } from '../utils';\n\nconst url = `${config.backendUrl}/api/register`;\n\nconst register = async (username, name, password, link) => {\n  const user = await axios.post(`${url}/${link}`, { username, name, password });\n  return user.data;\n};\n\nconst createLink = async () => {\n  const link = await axios.post(`${url}/add-link`);\n  return link.data;\n};\n\nexport default { register, createLink };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Menu, Container } from 'semantic-ui-react';\nimport { authService } from '../services';\nimport { useStateValue, setUser } from '../state';\n\nconst NavBar = () => {\n  const [{ user }, dispatch] = useStateValue();\n  return (\n    <Menu fixed=\"top\" inverted color=\"grey\" pointing secondary>\n      <Container>\n        <Menu.Item id=\"navbar-first-item\">\n          <Link to=\"/home\">\n            REEview xd\n          </Link>\n        </Menu.Item>\n        <Menu.Item>\n          <Link to=\"/questions\">\n            Questions\n          </Link>\n        </Menu.Item>\n        <Menu.Item>\n          <Link to=\"/practice-exam\">\n            Practice\n          </Link>\n        </Menu.Item>\n        <Menu.Item>\n          <Link to=\"/group-exam\">\n            Group Exam\n          </Link>\n        </Menu.Item>\n        {user.isAdmin && (\n        <Menu.Item>\n          <Link to=\"/admin\">\n            Admin\n          </Link>\n        </Menu.Item>\n        )}\n        <Menu.Item id=\"navbar-last-item\" position=\"right\">\n          <Button\n            type=\"button\"\n            onClick={async () => {\n              const response = await authService.logout();\n              if (response.status === 204) {\n                dispatch(setUser(null));\n              } else {\n                alert('Error logging out!');\n              }\n            }}\n          >\n            Logout\n          </Button>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n};\n\nexport default NavBar;\n","export default __webpack_public_path__ + \"static/media/image1.78132aee.jpeg\";","import React, { useEffect, useState } from 'react';\nimport {\n  Container, Segment, List, Header, Image,\n} from 'semantic-ui-react';\nimport { userService } from '../services';\nimport photo from '../images/image1.jpeg';\n\nconst Home = () => {\n  const [admins, setAdmins] = useState([]);\n  useEffect(() => {\n    const f = async () => {\n      const newAdmins = await userService.getAdmins();\n      setAdmins(newAdmins);\n    };\n    f();\n  }, []);\n  return (\n    <Container>\n      <Segment>\n        <Header>Current admins(char):</Header>\n        <List items={admins.map((admin) => admin.name)} />\n      </Segment>\n      <Image src={photo} size=\"big\" centered />\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Container, Grid, Header } from 'semantic-ui-react';\nimport { useStateValue } from '../state';\n\nconst Profile = () => {\n  const [{ user }] = useStateValue();\n  return (\n    <Container>\n      <Grid columns={2}>\n        <Grid.Column width={5}>\n          hallo\n        </Grid.Column>\n        <Grid.Column width={11}>\n          <Header>\n            {user.name}\n          </Header>\n        </Grid.Column>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport {\n  Button, Container, Divider, Label,\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst QuestionCard = ({ question }) => (\n  <>\n    <div className=\"pre-wrap-whitespace\">\n      {question.question}\n    </div>\n    {Object.keys(question.choices).map((choice) => (\n      <div key={choice}>\n        {`${choice.toUpperCase()}. ${question.choices[choice]}`}\n      </div>\n    ))}\n    <Label>\n      {`answer: ${question.answer.toUpperCase()}`}\n    </Label>\n    <Label>\n      {question.category}\n    </Label>\n    {question.year && (\n      <Label>\n        {question.year}\n      </Label>\n    )}\n    {question.tags?.map((tag) => (\n      <Label key={tag}>\n        {tag}\n      </Label>\n    ))}\n  </>\n);\n\nexport const ApprovedQuestionCard = ({ question, onSuggestUpdate }) => (\n  <Container>\n    <QuestionCard question={question} />\n    {onSuggestUpdate\n    && (\n      <>\n        <Button size=\"mini\" floated=\"right\" onClick={onSuggestUpdate}>Suggest Update</Button>\n        {question.suggestedUpdates?.length > 0\n        && (\n          <>\n            <Divider />\n            <span>Suggested Updates</span>\n            <ul>\n              {question.suggestedUpdates.map((v) => (\n                <li key={v}><Link to={`/questions/${v}`}>{v}</Link></li>\n              ))}\n            </ul>\n          </>\n        )}\n      </>\n    )}\n  </Container>\n);\n\nexport const PendingQuestionCard = ({ question, onApprove }) => (\n  <Container>\n    <QuestionCard question={question} />\n    {onApprove && <Button size=\"mini\" floated=\"right\" onClick={onApprove}>Approve</Button>}\n    {question.updateTo\n    && (\n      <>\n        <Divider />\n        <span>Update To: </span>\n        <Link to={`/questions/${question.updateTo}`}>{question.updateTo}</Link>\n      </>\n    )}\n  </Container>\n);\n","import React from 'react';\nimport { Slider } from 'react-semantic-ui-range';\nimport { Grid, Input, Container } from 'semantic-ui-react';\n\nconst SliderComponent = ({\n  category, max, setNumOfQuestions, categoryNumOfQuestions,\n}) => {\n  const settings = {\n    start: 0,\n    min: 0,\n    max,\n    step: 1,\n    onChange: (value) => {\n      setNumOfQuestions((prevState) => ({ ...prevState, [category]: value }));\n    },\n  };\n\n  const onInputChange = (e) => {\n    let value = parseInt(e.target.value, 10);\n    if (!value) value = 0;\n    else if (value > max) value = max;\n    setNumOfQuestions((prevState) => ({ ...prevState, [category]: value }));\n  };\n\n  return (\n    <Container key={category}>\n      <Grid columns={3}>\n        <Grid.Column width={2}>\n          {category.toUpperCase()}\n        </Grid.Column>\n        <Grid.Column width={10}>\n          <Slider value={categoryNumOfQuestions} settings={settings} />\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Input value={categoryNumOfQuestions} onChange={onInputChange} />\n        </Grid.Column>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default SliderComponent;\n","import React from 'react';\nimport { Segment } from 'semantic-ui-react';\nimport { useStateValue } from '../../state';\nimport SliderComponent from './SliderComponent';\nimport { objectValuesToArray } from '../../utils';\n\nconst ExamQuestionsOptions = ({ numOfQuestions, setNumOfQuestions }) => {\n  const [{ questions }] = useStateValue();\n  const { approved: approvedQuestions } = questions;\n\n  return (\n    Object.keys(numOfQuestions).map((category) => (\n      <Segment key={category}>\n        <SliderComponent\n          category={category}\n          max={objectValuesToArray(approvedQuestions[category]).length}\n          categoryNumOfQuestions={numOfQuestions[category]}\n          setNumOfQuestions={setNumOfQuestions}\n        />\n      </Segment>\n    ))\n  );\n};\n\nexport default ExamQuestionsOptions;\n","import React from 'react';\nimport { Container, Radio } from 'semantic-ui-react';\n\nconst ExamQuestionItem = ({ question, answerState, updateFunction }) => {\n  const handleChange = (e, { value }) => {\n    if (!updateFunction) return;\n    updateFunction(value);\n  };\n  return (\n    <Container>\n      <div className=\"pre-wrap-whitespace\">\n        {question.question}\n      </div>\n      {Object.keys(question.choices).map((choice) => (\n        <div>\n          <Radio\n            label={`${choice.toUpperCase()}. ${question.choices[choice]}`}\n            name={`${question.id}-radioGroup`}\n            value={choice}\n            checked={answerState === choice}\n            onChange={handleChange}\n          />\n        </div>\n      ))}\n    </Container>\n  );\n};\n\nexport default ExamQuestionItem;\n","import React, { useState, useMemo } from 'react';\nimport sampleSize from 'lodash.samplesize';\nimport shuffle from 'lodash.shuffle';\nimport {\n  Button, Container, Grid, Segment, Icon, Divider,\n} from 'semantic-ui-react';\nimport { useStateValue } from '../../state';\nimport ExamQuestionItem from '../../components/ExamQuestionItem';\nimport { objectValuesToArray } from '../../utils';\n\nconst Results = ({ examItems }) => {\n  const score = useMemo(() => (\n    examItems.reduce((acc, cur) => (cur.answer.user === cur.answer.correct ? acc + 1 : acc), 0)),\n  [examItems]);\n  return (\n    <Container>\n      <Segment size=\"big\">\n        {`Score: ${score} / ${examItems.length}`}\n      </Segment>\n      {examItems.map((item) => (\n        <Segment key={item.question.id}>\n          <ExamQuestionItem question={item.question} answerState={item.answer.user} />\n          {item.answer.user === item.answer.correct\n            ? <Icon name=\"check\" color=\"green\" /> : (\n              <div>\n                <Icon name=\"x\" color=\"red\" />\n                Correct answer:\n                {' '}\n                {item.answer.correct.toUpperCase()}\n              </div>\n            )}\n        </Segment>\n      ))}\n    </Container>\n  );\n};\n\nconst ExamProper = ({ numOfQuestions, finish }) => {\n  const [{ questions }] = useStateValue();\n  const { approved: approvedQuestions } = questions;\n  const [submitted, setSubmitted] = useState(false);\n  const [examItems, setExamItems] = useState(\n    shuffle(\n      sampleSize(objectValuesToArray(approvedQuestions.ee), numOfQuestions.ee).concat(\n        sampleSize(objectValuesToArray(approvedQuestions.esas), numOfQuestions.esas),\n        sampleSize(objectValuesToArray(approvedQuestions.math), numOfQuestions.math),\n      ).map((question) => ({ question, answer: { user: '', correct: question.answer } })),\n    ),\n  );\n  const [currentPageNumber, setCurrentPageNumber] = useState(0);\n  const [currentPageItems, setCurrentPageItems] = useState(\n    examItems.slice(currentPageNumber * 10, currentPageNumber * 10 + 10),\n  );\n\n  const updateExam = () => {\n    setExamItems((prevItems) => (\n      prevItems.slice(0, 10 * currentPageNumber)\n        .concat(currentPageItems.slice())\n        .concat(prevItems.slice(10 * currentPageNumber + 10))\n    ));\n  };\n\n  const handleNextPage = () => {\n    updateExam();\n    setCurrentPageItems(examItems\n      .slice((currentPageNumber + 1) * 10, (currentPageNumber + 2) * 10));\n    setCurrentPageNumber((p) => p + 1);\n  };\n\n  const handlePrevPage = () => {\n    updateExam();\n    setCurrentPageItems(examItems\n      .slice((currentPageNumber - 1) * 10, (currentPageNumber) * 10));\n    setCurrentPageNumber((p) => p - 1);\n  };\n\n  const retry = () => {\n    setSubmitted(false);\n    setExamItems((items) => items.map((item) => ({ ...item, answer: { ...item.answer, user: '' } })));\n    setCurrentPageNumber(0);\n    setCurrentPageItems(examItems.slice(0, 10));\n  };\n\n  return (\n    <Container>\n      {!submitted\n        ? (\n          <div>\n            <Grid columns={3}>\n              <Grid.Column width={2} verticalAlign=\"middle\">\n                {currentPageNumber > 0\n                  && <Button type=\"button\" onClick={handlePrevPage}>Previous</Button>}\n              </Grid.Column>\n              <Grid.Column width={12}>\n                {currentPageItems.map((item, i) => (\n                  <Segment key={item.question.id}>\n                    <ExamQuestionItem\n                      question={item.question}\n                      answerState={item.answer.user}\n                      updateFunction={(value) => {\n                        setCurrentPageItems((prevItems) => prevItems.slice(0, i)\n                          .concat({ ...item, answer: { ...item.answer, user: value } })\n                          .concat(prevItems.slice(i + 1)));\n                      }}\n                    />\n                  </Segment>\n                ))}\n                {currentPageNumber === Math.floor(examItems.length / 10)\n                  && <Button type=\"button\" fluid onClick={() => { setSubmitted(true); updateExam(); }}>Submit</Button>}\n              </Grid.Column>\n              <Grid.Column width={2} verticalAlign=\"middle\">\n                {currentPageNumber < Math.floor(examItems.length / 10)\n                  && <Button type=\"button\" onClick={handleNextPage}>Next</Button>}\n              </Grid.Column>\n            </Grid>\n          </div>\n        )\n        : (\n          <>\n            <Results examItems={examItems} />\n            <Divider />\n            <Button type=\"button\" onClick={finish}>Done</Button>\n            <Button type=\"button\" onClick={retry}>Retry</Button>\n          </>\n        )}\n    </Container>\n  );\n};\n\nexport default ExamProper;\n","import React, { useState } from 'react';\nimport {\n  Container, Button, Divider, Segment,\n} from 'semantic-ui-react';\nimport ExamQuestionsOptions from '../../components/ExamQuestionsOptions/ExamQuestionsOptions';\nimport ExamProper from './ExamProper';\n\nconst PracticeExam = () => {\n  const [numOfQuestions, setNumOfQuestions] = useState({ ee: 0, esas: 0, math: 0 });\n  const [started, setStarted] = useState(false);\n\n  const finish = () => {\n    setStarted(false);\n    setNumOfQuestions({ ee: 0, esas: 0, math: 0 });\n  };\n\n  return (\n    <Container>\n      {!started\n        ? (\n          <>\n            <ExamQuestionsOptions\n              numOfQuestions={numOfQuestions}\n              setNumOfQuestions={setNumOfQuestions}\n            />\n            <Segment>\n              Total Questions:\n              {' '}\n              {numOfQuestions.ee + numOfQuestions.esas + numOfQuestions.math}\n            </Segment>\n            <Divider hidden />\n            <Button type=\"button\" fluid onClick={() => { setStarted(true); }}>Start</Button>\n          </>\n        )\n        : (\n          <ExamProper numOfQuestions={numOfQuestions} finish={finish} />\n        )}\n    </Container>\n  );\n};\n\nexport default PracticeExam;\n","import React, { useMemo, useState } from 'react';\nimport {\n  Container, Popup, Header, Icon, Segment, Transition, Button, Grid, Divider,\n} from 'semantic-ui-react';\nimport { useStateValue } from '../../state';\nimport { ApprovedQuestionCard } from '../../components/QuestionItem';\n\nconst ResultItem = ({ singleObjectQuestions, result, examQuestions }) => {\n  const [showItems, setShowItems] = useState(false);\n  return (\n    <Grid.Column>\n      <Segment>\n        <strong>{result.name}</strong>\n        {' '}\n        {result.score}\n        {' '}\n        <Button type=\"button\" size=\"mini\" onClick={() => setShowItems((p) => !p)}>{showItems ? 'Hide' : 'Show'}</Button>\n        <Transition visible={showItems}>\n          <div>\n            {result.answers.map((answer, index) => {\n              const question = singleObjectQuestions[examQuestions[index]];\n              const correct = question.answer === answer;\n              return (\n                <Popup\n                  key={question.id}\n                  trigger={<Icon name={correct ? 'check' : 'x'} color={correct ? 'green' : 'red'} />}\n                >\n                  <div className=\"popup-content\">\n                    <Header size=\"small\">{index + 1}</Header>\n                    <ApprovedQuestionCard question={singleObjectQuestions[examQuestions[index]]} />\n                    <Divider hidden />\n                    {`${result.name}'s Answer: ${answer.toUpperCase()}`}\n                  </div>\n                </Popup>\n              );\n            })}\n          </div>\n        </Transition>\n      </Segment>\n    </Grid.Column>\n  );\n};\n\nconst Results = ({ results, examQuestions }) => {\n  const [{ questions }] = useStateValue();\n  const { approved: approvedQuestions } = questions;\n  const singleObjectQuestions = useMemo(() => (\n    { ...approvedQuestions.ee, ...approvedQuestions.esas, ...approvedQuestions.math }\n  ), [approvedQuestions]);\n  return (\n    <Container>\n      <Segment>\n        <Header>\n          Results. Total Number of Questions:\n          {' '}\n          {examQuestions.length}\n        </Header>\n        <Grid columns={3}>\n          {Object.keys(results).map((id) => (\n            <ResultItem\n              key={id}\n              singleObjectQuestions={singleObjectQuestions}\n              result={results[id]}\n              examQuestions={examQuestions}\n            />\n          ))}\n        </Grid>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Results;\n","import React, {\n  useEffect, useMemo, useState, useRef,\n} from 'react';\nimport {\n  Button, Container, Divider, Grid, Loader, Segment, Header, Form, TextArea,\n} from 'semantic-ui-react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ExamQuestionItem from '../../components/ExamQuestionItem';\nimport { useStateValue } from '../../state';\nimport Results from './Results';\n\nconst CurrentParticipants = ({ socket }) => {\n  const [participants, setParticipants] = useState([]);\n  useEffect(() => {\n    socket.emit('get-participants');\n    socket.on('participants', (newParticipants) => setParticipants(newParticipants));\n    return () => {\n      socket.off('participants');\n    };\n  }, [socket]);\n  return (\n    <Container className=\"overflow-y-scroll fixed-height-500px\">\n      <Header>In Lobby</Header>\n      {participants.map((participant) => (\n        <div key={participant.id}>\n          {participant.name}\n        </div>\n      ))}\n    </Container>\n  );\n};\n\nconst ChatBox = ({ socket }) => {\n  const [messages, setMessages] = useState([]);\n  const [typedMessage, setTypedMessage] = useState('');\n  const messageBoxRef = useRef();\n  useEffect(() => {\n    socket.on('new-message', (message) => setMessages(\n      (prevMessages) => {\n        const newMessages = prevMessages.slice();\n        newMessages.unshift({ ...message, id: uuidv4() });\n        return newMessages;\n      },\n    ));\n    return () => {\n      socket.off('new-message');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    messageBoxRef.current.scrollTop = messageBoxRef.current.scrollHeight;\n  }, [messages]);\n\n  const handleSend = (e) => {\n    e.preventDefault();\n    if (!typedMessage) return;\n    socket.emit('new-message', typedMessage);\n    setTypedMessage('');\n  };\n\n  return (\n    <div className=\"chat-box overflow-y-scroll fixed-height-500px\" ref={messageBoxRef}>\n      <Form onSubmit={handleSend}>\n        <Grid className=\"chat-box-grid\">\n          <Grid.Column width={13} className=\"one-px-padding-left-right\">\n            <TextArea\n              value={typedMessage}\n              rows={2}\n              onChange={(e) => setTypedMessage(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.keyCode === 13 && e.shiftKey === false) {\n                  handleSend(e);\n                }\n              }}\n            />\n          </Grid.Column>\n          <Grid.Column width={3} stretched className=\"one-px-padding-left-right\">\n            <Button fluid size=\"medium\" type=\"submit\">Send</Button>\n          </Grid.Column>\n        </Grid>\n      </Form>\n      {messages.map((message) => (\n        <div key={message.id} className=\"chat-box-message\">\n          <strong>{message.sender}</strong>\n          :\n          {' '}\n          {message.content}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst GroupExamLobby = ({ socket, create }) => {\n  const [{ questions }] = useStateValue();\n  const { approved: approvedQuestions } = questions;\n  const singleObjectQuestions = useMemo(() => ({\n    ...approvedQuestions.ee, ...approvedQuestions.esas, ...approvedQuestions.math,\n  }), [approvedQuestions]);\n  const [currentQuestionId, setCurrentQuestionId] = useState(null);\n  const [currentAnswer, setCurrentAnswer] = useState('');\n  const [currentNumber, setCurrentNumber] = useState(-1);\n  const [calculatingResults, setCalculatingResults] = useState(false);\n  const [examQuestions, setExamQuestions] = useState(null);\n  const [results, setResults] = useState(null);\n  useEffect(() => {\n    if (!socket) return () => {};\n    socket.on('new-question', (questionId, number) => {\n      socket.emit('answer', currentAnswer, currentNumber);\n      setCurrentQuestionId(questionId);\n      setCurrentAnswer('');\n      setCurrentNumber(number);\n    });\n    socket.on('finishing', () => {\n      socket.emit('answer', currentAnswer, currentNumber);\n      setCalculatingResults(true);\n    });\n    socket.on('results', ({ examResults, examQuestions: examQuestions_ }) => {\n      setResults(examResults);\n      setExamQuestions(examQuestions_);\n      setCalculatingResults(false);\n      setCurrentQuestionId(null);\n    });\n    socket.emit('get-results');\n    return () => {\n      socket.off('new-question');\n      socket.off('results');\n      socket.off('finishing');\n    };\n  }, [socket, currentAnswer, currentNumber]);\n  return (\n    <Container>\n      <Loader active={calculatingResults} />\n      {currentQuestionId\n        ? (\n          <Segment size=\"big\">\n            <ExamQuestionItem\n              question={singleObjectQuestions[currentQuestionId]}\n              answerState={currentAnswer}\n              updateFunction={(value) => setCurrentAnswer(value)}\n            />\n          </Segment>\n        )\n        : (\n          <div>\n            {create && !results\n            && (\n              <Button type=\"button\" fluid onClick={() => { if (!socket) return; socket.emit('start'); }}>Start</Button>\n            )}\n            {results && examQuestions\n            && (\n              <Results results={results} examQuestions={examQuestions} />\n            )}\n            <Divider />\n            <Grid columns={2}>\n              <Grid.Column stretched>\n                <Segment>\n                  <CurrentParticipants socket={socket} />\n                </Segment>\n              </Grid.Column>\n              <Grid.Column>\n                <Segment>\n                  <ChatBox socket={socket} />\n                </Segment>\n              </Grid.Column>\n            </Grid>\n          </div>\n        )}\n    </Container>\n  );\n};\n\nexport default GroupExamLobby;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button, Container, Divider, Segment, Confirm, Modal, Input,\n} from 'semantic-ui-react';\nimport { io } from 'socket.io-client';\nimport GroupExamLobby from './GroupExamLobby';\nimport { useStateValue } from '../../state';\nimport { questionsService } from '../../services';\nimport ExamQuestionsOptions from '../../components/ExamQuestionsOptions/ExamQuestionsOptions';\nimport { fetchQuestions } from '../../utils';\n\nconst CreateLobbyModal = ({ onSubmit, modalOpen, onClose }) => {\n  const [numOfQuestions, setNumOfQuestions] = useState({ ee: 0, esas: 0, math: 0 });\n  const [timeInterval, setTimeInterval] = useState(5);\n  const handleTimeIntervalInput = (e) => {\n    let val = parseInt(e.target.value, 10);\n    if (val < 5) val = 5;\n    else if (val > 30) val = 30;\n    setTimeInterval(val);\n  };\n\n  return (\n    <Modal open={modalOpen} onClose={onClose} closeIcon>\n      <Modal.Header>Create Lobby</Modal.Header>\n      <Modal.Content>\n        <ExamQuestionsOptions\n          numOfQuestions={numOfQuestions}\n          setNumOfQuestions={setNumOfQuestions}\n        />\n        <Input\n          label=\"Time interval between questions. (min: 5s, max : 30s)\"\n          value={timeInterval}\n          onChange={(e) => setTimeInterval(e.target.value)}\n          onBlur={handleTimeIntervalInput}\n        />\n        <Divider hidden />\n        <Button type=\"button\" fluid onClick={() => onSubmit(numOfQuestions, timeInterval)}>Create</Button>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst Lobbies = ({ socket }) => {\n  const [lobbies, setLobbies] = useState([]);\n  useEffect(() => {\n    if (!socket) return () => {};\n    socket.emit('get-lobbies');\n    socket.on('lobbies', (newLobbies) => setLobbies(newLobbies));\n    return () => {\n      socket.off('lobbies');\n    };\n  }, [socket]);\n\n  return (\n    <Container>\n      Currently hosted:\n      {lobbies.map((lobby) => (\n        <div key={lobby.id}>\n          {lobby.host}\n          <Button\n            type=\"button\"\n            onClick={() => {\n              if (!socket) return;\n              socket.emit('join-lobby', lobby.id);\n            }}\n          >\n            Join\n          </Button>\n        </div>\n      ))}\n    </Container>\n  );\n};\n\nconst GroupExam = () => {\n  const [, dispatch] = useStateValue();\n  const [socket, setSocket] = useState(null);\n  const [create, setCreate] = useState(false);\n  const [lobbyId, setLobbyId] = useState('');\n  const [leave, setLeave] = useState(false);\n\n  useEffect(() => {\n    let newSocket;\n    if (process.env.NODE_ENV === 'development') {\n      newSocket = io('http://localhost:3000', { withCredentials: true });\n    } else {\n      newSocket = io();\n    }\n    newSocket.emit('get-lobby');\n    newSocket.on('lobby', (lobby) => {\n      if (!lobby) return;\n      const { id, host } = lobby;\n      setCreate(host);\n      setLobbyId(id);\n      newSocket.emit('reconnect');\n    });\n    newSocket.on('join-lobby', async (id) => {\n      setLobbyId(id);\n      await fetchQuestions(dispatch, questionsService);\n    });\n    newSocket.on('leave-lobby', async () => {\n      setCreate(false);\n      setLobbyId('');\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.off('join-lobby');\n      newSocket.off('lobby');\n      newSocket.off('leave-lobby');\n      newSocket.close();\n    };\n  }, [dispatch]);\n\n  const onCreate = (numOfQuestions, timeInterval) => {\n    if (!socket) return;\n    socket.emit('create-lobby', numOfQuestions, timeInterval);\n  };\n\n  return (\n    <Container>\n      {lobbyId === ''\n        ? (\n          <>\n            <Segment>\n              <Lobbies socket={socket} />\n            </Segment>\n            <Button type=\"button\" onClick={() => setCreate((p) => !p)}>\n              Create Lobby\n            </Button>\n            <CreateLobbyModal\n              onSubmit={onCreate}\n              modalOpen={create}\n              onClose={() => setCreate((p) => !p)}\n            />\n          </>\n        )\n        : (\n          <Container>\n            <GroupExamLobby socket={socket} create={create} />\n            <Divider />\n            <Button\n              type=\"button\"\n              onClick={() => setLeave(true)}\n              floated=\"right\"\n            >\n              Leave lobby\n            </Button>\n            <Divider hidden />\n            <Confirm\n              open={leave}\n              onCancel={() => setLeave(false)}\n              onConfirm={() => {\n                if (!socket) return;\n                socket.emit('leave-lobby');\n                setLeave(false);\n              }}\n            />\n          </Container>\n        )}\n    </Container>\n  );\n};\n\nexport default GroupExam;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from 'react';\nimport {\n  Container, Form, Message, Segment,\n} from 'semantic-ui-react';\nimport { useFormik } from 'formik';\nimport { authService } from '../services';\nimport { useStateValue, setUser } from '../state';\nimport { isAscii, isAlphaNumeric } from '../utils';\n\nconst Login = () => {\n  const [, dispatch] = useStateValue();\n  const [error, setError] = useState();\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n    },\n    validate: (values) => {\n      const errors = {};\n      if (!values.username) {\n        errors.username = 'Required';\n      } else if (values.username.length < 6) {\n        errors.username = 'Username must be at least 6 characters';\n      } else if (values.username.length > 40) {\n        errors.username = 'Too long!';\n      } else if (!isAlphaNumeric(values.username)) {\n        errors.username = 'Invalid Characters';\n      }\n\n      if (!values.password) {\n        errors.password = 'Required';\n      } else if (values.password.length < 3) {\n        errors.password = 'Password must be at least 3 characters';\n      } else if (values.password.length > 40) {\n        errors.password = 'Too long!';\n      } else if (!isAscii(values.password)) {\n        errors.password = 'Invalid Characters';\n      }\n      return errors;\n    },\n    onSubmit: async (values) => {\n      try {\n        const user = await authService.login(values.username, values.password);\n        dispatch(setUser(user));\n      } catch (err) {\n        setError(err.response.data.error);\n      }\n    },\n  });\n  return (\n    <Container>\n      {error && <Message color=\"red\">{error}</Message>}\n      <Segment>\n        <Form onSubmit={formik.handleSubmit}>\n          <Form.Field\n            label=\"Username\"\n            control={Form.Input}\n            {...formik.getFieldProps('username')}\n            error={formik.touched.username && formik.errors.username && {\n              content: formik.errors.username,\n            }}\n          />\n          <Form.Field\n            label=\"Password\"\n            control={Form.Input}\n            type=\"password\"\n            {...formik.getFieldProps('password')}\n            error={formik.touched.password && formik.errors.password && {\n              content: formik.errors.password,\n            }}\n          />\n          <Form.Button type=\"submit\" fluid>Login</Form.Button>\n        </Form>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Login;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from 'react';\nimport {\n  Container, Form, Message, Segment, Header, Divider, Button,\n} from 'semantic-ui-react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { registerService } from '../services';\nimport { useStateValue, setUser } from '../state';\nimport { isAlphaNumeric, isAscii, isAlphaNumericWithSpace } from '../utils';\n\nconst Register = () => {\n  const [, dispatch] = useStateValue();\n  const [error, setError] = useState();\n  const { id } = useParams();\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      name: '',\n      password: '',\n      confirmPassword: '',\n    },\n    validate: (values) => {\n      const errors = {};\n      if (!values.username) {\n        errors.username = 'Required';\n      } else if (values.username.length < 6) {\n        errors.username = 'Username must be at least 6 characters long';\n      } else if (values.username.length > 40) {\n        errors.username = 'Too long!';\n      } else if (!isAlphaNumeric(values.username)) {\n        errors.username = 'Invalid characters';\n      }\n\n      if (!values.name) {\n        errors.name = 'Required';\n      } else if (values.name.length < 3) {\n        errors.name = 'Name must be at least 3 characters';\n      } else if (values.name.length > 40) {\n        errors.name = 'Too long!';\n      } else if (!isAlphaNumericWithSpace(values.name)) {\n        errors.name = 'Invalid characters';\n      }\n\n      if (!values.password) {\n        errors.password = 'Required';\n      } else if (values.password.length < 3) {\n        errors.password = 'Password must be at least 3 characters';\n      } else if (values.password.length > 40) {\n        errors.password = 'Too long';\n      } else if (!isAscii(values.password)) {\n        errors.password = 'Invalid Characters';\n      }\n\n      if (!values.confirmPassword) {\n        errors.confirmPassword = 'Required';\n      } else if (values.confirmPassword !== values.password) {\n        errors.confirmPassword = 'Passwords dont match';\n      }\n      return errors;\n    },\n    onSubmit: async (values) => {\n      try {\n        const user = await registerService.register(\n          values.username, values.name, values.password, id,\n        );\n        dispatch(setUser(user));\n      } catch (err) {\n        setError(err.response.data.error);\n      }\n    },\n  });\n  return (\n    <Container>\n      {error && <Message color=\"red\">{error}</Message>}\n      <Header>Register</Header>\n      <Segment>\n        <Form onSubmit={formik.handleSubmit}>\n          <Form.Field\n            label=\"Username\"\n            control={Form.Input}\n            {...formik.getFieldProps('username')}\n            error={formik.touched.username && formik.errors.username && {\n              content: formik.errors.username,\n            }}\n          />\n          <Form.Field\n            label=\"Name\"\n            control={Form.Input}\n            type=\"text\"\n            {...formik.getFieldProps('name')}\n            error={formik.touched.name && formik.errors.name && {\n              content: formik.errors.name,\n            }}\n          />\n          <Form.Field\n            label=\"Password\"\n            control={Form.Input}\n            type=\"password\"\n            placeholder=\"Please don't forget your password ty\"\n            {...formik.getFieldProps('password')}\n            error={formik.touched.password && formik.errors.password && {\n              content: formik.errors.password,\n            }}\n          />\n          <Form.Field\n            label=\"Confirm Password\"\n            control={Form.Input}\n            type=\"password\"\n            {...formik.getFieldProps('confirmPassword')}\n            error={formik.touched.confirmPassword && formik.errors.confirmPassword && {\n              content: formik.errors.confirmPassword,\n            }}\n          />\n          <Form.Button type=\"submit\" fluid>Register</Form.Button>\n        </Form>\n        <Divider />\n        <Link to=\"/\">\n          <Button fluid type=\"button\">Login</Button>\n        </Link>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button, Confirm, Container, Grid, Header, Input, Segment,\n} from 'semantic-ui-react';\nimport { userService, registerService } from '../services';\nimport { config } from '../utils';\n\nconst Admin = () => {\n  const [registrationLink, setRegistrationLink] = useState('');\n  const [error, setError] = useState('');\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const f = async () => {\n      try {\n        const newUsers = await userService.getAllUsers();\n        setUsers(newUsers);\n      } catch (e) {\n        setError(e.response.data.error);\n      }\n    };\n    f();\n  }, []);\n  const createRegistrationLink = async () => {\n    try {\n      const newRegistrationLink = await registerService.createLink();\n      setRegistrationLink(`${config.backendUrl}/register/${newRegistrationLink}`);\n    } catch (e) {\n      setError(e.response.data.error);\n    }\n  };\n\n  const promote = async (id) => {\n    try {\n      const updatedUser = await userService.promote(id);\n      setUsers((prev) => prev.filter((e) => e.id !== id).concat(updatedUser));\n    } catch (e) {\n      alert(e);\n    }\n  };\n  return (\n    <Container>\n      <Confirm\n        content={error}\n        open={!!error}\n        onCancel={() => setError('')}\n        onConfirm={() => setError('')}\n      />\n      <Segment>\n        <Grid columns={2}>\n          <Grid.Column width={4}>\n            <Button type=\"button\" fluid onClick={createRegistrationLink}>Create Registration Link</Button>\n          </Grid.Column>\n          <Grid.Column width={12}>\n            <Input\n              fluid\n              action={{\n                labelPosition: 'right',\n                icon: 'copy',\n                content: 'Copy',\n                onClick: () => navigator.clipboard.writeText(registrationLink),\n              }}\n              value={registrationLink}\n            />\n          </Grid.Column>\n        </Grid>\n        <Header size=\"small\">Links are only valid for 5 minutes!</Header>\n      </Segment>\n      <Segment>\n        <Header>\n          All users\n        </Header>\n        <Grid columns={5}>\n          {users.map((user) => (\n            <Grid.Column key={user.id}>\n              <strong>{user.name}</strong>\n              {' -- '}\n              {user.isAdmin ? 'Admin'\n                : (\n                  <Button\n                    size=\"tiny\"\n                    type=\"button\"\n                    onClick={() => promote(user.id)}\n                  >\n                    Promote\n                  </Button>\n                )}\n            </Grid.Column>\n          ))}\n        </Grid>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Admin;\n","export default __webpack_public_path__ + \"static/media/jmon.33b9c5bb.jpg\";","import React, { useEffect, useState } from 'react';\nimport {\n  Container, Divider, Grid, Header, Image, Loader,\n} from 'semantic-ui-react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Home from './pages/Home';\nimport Profile from './pages/Profile';\nimport Questions from './pages/Questions';\nimport PracticeExam from './pages/PracticeExam';\nimport GroupExam from './pages/GroupExam';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Admin from './pages/Admin';\nimport jmon from './images/jmon.jpg';\nimport { useStateValue, setUser } from './state';\nimport { userService, questionsService } from './services';\nimport { fetchQuestions, approvedQuestionsAsArray } from './utils';\n\nif (process.env.NODE_ENV === 'development') axios.defaults.withCredentials = true;\n\nconst AppWithLoggedInUser = () => {\n  const [{ questions }] = useStateValue();\n  return (\n    approvedQuestionsAsArray(questions.approved).length > 0 ? (\n      <Router>\n        <NavBar />\n        <Container className=\"padded-top\">\n          <Divider hidden />\n          <Switch>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/practice-exam\">\n              <PracticeExam />\n            </Route>\n            <Route exact path=\"/group-exam\">\n              <GroupExam />\n            </Route>\n            <Route exact path=\"/admin\">\n              <Admin />\n            </Route>\n            <Route exact path=\"/questions\">\n              <Questions />\n            </Route>\n            <Route exact path=\"/questions/:id\">\n              <Questions />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Container>\n      </Router>\n    ) : <Loader />\n  );\n};\n\nconst App = () => {\n  const [{ user }, dispatch] = useStateValue();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const f = async () => {\n      try {\n        const currentUser = await userService.getCurrentUser();\n        dispatch(setUser(currentUser));\n      // eslint-disable-next-line no-empty\n      } catch (e) {} finally {\n        setLoading(false);\n      }\n    };\n    f();\n  }, [dispatch]);\n  useEffect(() => {\n    if (!user) return;\n    const f = async () => {\n      await fetchQuestions(dispatch, questionsService);\n    };\n    f();\n  }, [dispatch, user, loading.user]);\n  if (loading) { return <Loader />; }\n  return (\n    <div className=\"App\">\n      {user\n        ? <AppWithLoggedInUser />\n        : (\n          <Router>\n            <Divider hidden />\n            <Container>\n              <Header size=\"huge\" textAlign=\"center\">\n                REEview xd\n              </Header>\n              <Grid columns={2} centered>\n                <Grid.Column>\n                  <Image centered src={jmon} />\n                </Grid.Column>\n                <Grid.Column stretched>\n                  <Switch>\n                    <Route exact path=\"/register/:id\">\n                      <Register />\n                    </Route>\n                    <Route path=\"/\">\n                      <Login />\n                    </Route>\n                  </Switch>\n                </Grid.Column>\n              </Grid>\n            </Container>\n          </Router>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport { StateProvider, reducer } from './state';\n\nReactDOM.render(\n  <StateProvider reducer={reducer}>\n    <App />\n  </StateProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}